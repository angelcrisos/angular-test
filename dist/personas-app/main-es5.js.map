{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/personas/form.component.ts","webpack:///src/app/personas/form.component.html","webpack:///src/app/personas/persona.service.ts","webpack:///src/app/personas/persona.ts","webpack:///src/app/personas/personas.component.ts","webpack:///src/app/personas/personas.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","curso","selector","templateUrl","styleUrls","routes","path","redirectTo","pathMatch","component","AppModule","forRoot","declarations","imports","providers","bootstrap","HeaderComponent","FormComponent","personaService","router","titulo","persona","console","log","create","subscribe","navigate","fire","name","err","errores","error","errors","PersonaService","http","urlEndPoint","httpHeader","get","post","headers","pipe","response","mensaje","status","Persona","PersonasComponent","getPersonas","personas","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'personas-app';\n  curso:string = 'Prueba';\n}\n","<app-header></app-header>\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { PersonasComponent } from './personas/personas.component';\nimport { PersonaService } from './personas/persona.service';\nimport {RouterModule, Routes} from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormComponent } from './personas/form.component';\nimport { FormsModule} from '@angular/forms';\n\nconst routes:Routes = [\n  {path:'', redirectTo: '/personas', pathMatch: 'full'},\n  {path:'personas', component: PersonasComponent},\n  {path:'personas/form', component: FormComponent}\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    PersonasComponent,\n    FormComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    RouterModule.forRoot(routes)\n  ],\n  providers: [PersonaService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html'\n})\nexport class HeaderComponent {\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n  <a class=\"navbar-brand\" href=\"#\">Navbar</a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" href=\"#\">Home <span class=\"sr-only\">(current)</span></a>\n      </li>\n\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLink=\"/personas\">Personas</a>\n      </li>\n    </ul>\n  </div>\n</nav>\n","import { Component, OnInit } from '@angular/core';\nimport {Persona} from './persona';\nimport { PersonaService } from './persona.service';\nimport { Router } from '@angular/router';\nimport swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html'\n})\nexport class FormComponent implements OnInit {\n  public titulo:string = 'Crear Persona'\n  public persona:Persona = new Persona();\n  public errores:string[];\n  constructor(private personaService: PersonaService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  public create():void{\n    console.log(this.persona);\n    this.personaService.create(this.persona).subscribe(\n      persona => {\n        this.router.navigate(['/personas'])\n        swal.fire('Nueva Persona', `Persona ${persona.name} creado con exito`,'success')\n      },\n      err => {\n        this.errores = err.error.errors as string[];\n      }\n    );\n  }\n}\n","<ul class=\"alert alert-danger\" *ngIf=\"errores?.length > 0\">\n  <li *ngFor=\"let err of errores\">\n      {{err}}\n  </li>\n</ul>\n\n<div class=\"card bg-dark text-white\">\n\n  <div class=\"card-header\">\n    {{titulo}}\n  </div>\n\n  <div class=\"card-body\">\n    <form #personaForm=\"ngForm\">\n      <div class=\"form-group row\">\n        <label for=\"nombre\" class=\"col-form-label col-sm-2\">Nombre</label>\n          <div class=\"col-sm-6\">\n              <input type=\"text\" class=\"form-control\" [(ngModel)]=\"persona.name\" name=\"nombre\" required>\n          </div>\n      </div>\n\n      <div class=\"form-group row\">\n        <label for=\"apellidos\" class=\"col-form-label col-sm-2\">Apellidos</label>\n          <div class=\"col-sm-6\">\n              <input type=\"text\" class=\"form-control\" [(ngModel)]=\"persona.lastName\" name=\"apellidos\" required>\n          </div>\n      </div>\n\n      <div class=\"form-group row\">\n        <label for=\"fechaNac\" class=\"col-form-label col-sm-2\">Fecha Nacimiento</label>\n          <div class=\"col-sm-6\">\n\n              <input type=\"date\" class=\"form-control\" id=\"fechaNac\" name=\"fechaNac\" [(ngModel)]=\"persona.dateOfBirth\" min=\"1920-01-01\" required>\n\n          </div>\n      </div>\n\n      <div class=\"form-group row\">\n        <div class=\"col-sm-6\">\n          <button role=\"button\" class=\"btn btn-primary\" (click)='create()'  >Crear</button>\n        </div>\n\n      </div>\n\n    </form>\n\n  </div>\n\n</div>\n","import { Injectable } from '@angular/core';\nimport {Persona} from './persona';\nimport { of, Observable, throwError } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport {Router} from '@angular/router';\nimport  {map, catchError} from 'rxjs/operators';\nimport swal from 'sweetalert2';\n\n@Injectable()\nexport class PersonaService {\n  private urlEndPoint:string = 'http://localhost:8080/api/people';\n  private httpHeader = new  HttpHeaders({'Content-Type':'application/json'});\n  constructor(private http: HttpClient) { }\n\n  getPersonas():Observable<Persona[]>{\n    return this.http.get<Persona[]>(this.urlEndPoint)\n  }\n\n  create(persona:Persona) : Observable<Persona>{\n    return this.http.post(this.urlEndPoint, persona, {headers: this.httpHeader}).pipe(\n      map( (response:any) => response.persona as Persona),\n      catchError(e => {\n        console.error(e.error.mensaje);\n        if(e.status==400){\n          return throwError(e);\n        }\n        swal.fire(e.error.mensaje, e.error.error, 'error');\n        return throwError(e);\n      })\n    );\n  }\n}\n","import {Poem} from './poem';\nexport class Persona {\n\n  id:number;\n  name:string;\n\tlastName:string;\n\tdateOfBirth:string;\n  age:number;\n  birthdayDays:number;\n  poem:Poem;\n}\n","import { Component, OnInit } from '@angular/core';\nimport {Persona} from './persona';\nimport {PersonaService} from './persona.service';\n@Component({\n  selector: 'app-personas',\n  templateUrl: './personas.component.html'\n})\nexport class PersonasComponent implements OnInit {\n\n  personas: Persona[];\n  constructor(private personaService: PersonaService) { }\n\n  ngOnInit(): void {\n    this.personaService.getPersonas().subscribe(\n      personas => this.personas = personas\n    );\n  }\n\n}\n","<div class=\"card border-primary mb-3\" >\n  <div class=\"card-header\">Personas</div>\n  <div class=\"card-body text-primary\">\n    <h5 class=\"card-title\">Listado de Personas</h5>\n    <div class=\"my-2 text-left\">\n      <button type=\"button\" class=\"btn btn-rounded btn-primary\" [routerLink] = \"['/personas/form']\">Crear Persona</button>\n    </div>\n    <table class=\"table table-bordered table-striped\">\n      <thead>\n        <tr>\n          <th>Nombre</th>\n          <th>Apellido</th>\n          <th>Fecha</th>\n          <th>Edad</th>\n          <th>Dias</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let persona of personas\">\n          <td>{{persona.name}}</td>\n          <td>{{persona.lastName}}</td>\n          <td>{{persona.dateOfBirth}}</td>\n          <td>{{persona.age}}</td>\n          <td *ngIf=\"persona.birthdayDays != 365\">Faltan {{persona.birthdayDays}} días para su cumpleaños</td>\n          <td *ngIf=\"persona.birthdayDays == 365\">Feliz cumpleaños, un poema para usted : {{persona.poem.content}}</td>\n        </tr>\n      </tbody>\n\n    </table>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}